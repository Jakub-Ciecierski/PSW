(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    205747,       3932]
NotebookOptionsPosition[    203631,       3873]
NotebookOutlinePosition[    203972,       3888]
CellTagsIndexPosition[    203929,       3885]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6921173990033216`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Q", " ", "-", " ", 
     RowBox[{"parameters", " ", "Q"}]}], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"q1", " ", "\[Equal]", " ", "alpha"}], ",", " ", 
      RowBox[{"q2", " ", "\[Equal]", " ", "beta"}]}], ")"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Configuration", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", ":=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}]}], ",", "  ", 
      RowBox[{"(*", " ", "x1", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"l", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}]}], ",", "  ", 
      RowBox[{"(*", " ", "y1", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"2", "*", "l", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}]}], ",", " ", 
      RowBox[{"(*", " ", "x2", " ", "*)"}], "\[IndentingNewLine]", "0", " ", 
      ",", " ", 
      RowBox[{"(*", " ", "y2", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", "l", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}]}], ")"}], " ", "+", " ", 
       RowBox[{"(", 
        RowBox[{"2", "*", "l", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}]}], ")"}]}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"x3", " ", "\[Equal]", " ", 
         RowBox[{"x2", " ", "+"}]}], " ", "..."}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"0", " ", "+", " ", 
       RowBox[{"(", 
        RowBox[{"2", "*", "l", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}]}], ")"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y3", " ", "\[Equal]", " ", 
         RowBox[{"y2", " ", "+"}]}], " ", "..."}], "."}], " ", "*)"}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dX", " ", ":=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"X", ",", "t"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", ":=", " ", 
   RowBox[{"(", GridBox[{
      {"m1", "0", "0", "0", "0", "0"},
      {"0", "m1", "0", "0", "0", "0"},
      {"0", "0", "m2", "0", "0", "0"},
      {"0", "0", "0", "m2", "0", "0"},
      {"0", "0", "0", "0", "m3", "0"},
      {"0", "0", "0", "0", "0", "m3"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", " ", ":=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"0", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"-", "g"}], ",", " ", "\[IndentingNewLine]", "0", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"-", "g"}], ",", " ", "\[IndentingNewLine]", " ", "0", ",", " ",
       "\[IndentingNewLine]", 
      RowBox[{"-", "g"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Trig", "\[Rule]", 
    RowBox[{"False", " ", "disabled", " ", 
     RowBox[{"trig", ".", " ", "simplifications"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", ":=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", ".", "dX", ".", "dX"}], ")"}], " ", "/", " ", "2"}], ",", 
     " ", 
     RowBox[{"Trig", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", " ", ":=", " ", 
    RowBox[{"m", ".", "G", ".", "X"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Lagrange", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{"T", " ", "-", " ", "U"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtdq1", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{
        RowBox[{"q1", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dq1", " ", "=", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"q1", "[", "t", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtdq2", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dq2", " ", "=", " ", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", 
      RowBox[{"q2", "[", "t", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LangrageDiff1", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"dtdq1", " ", "-", " ", "dq1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LangrageDiff2", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"dtdq2", " ", "-", " ", "dq2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", " ", "=", " ", "LangrageDiff1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r2", " ", "=", " ", "LangrageDiff2"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Hamilton", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{"T", " ", "+", " ", "U"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{"L", ",", " ", 
      RowBox[{
       RowBox[{"q1", "'"}], "[", "t", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p2", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"D", "[", 
      RowBox[{"L", ",", " ", 
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dp1", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"Simplify", "[", 
     RowBox[{"D", "[", 
      RowBox[{"H", ",", " ", 
       RowBox[{"q1", "[", "t", "]"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dp2", " ", "=", " ", 
    RowBox[{"-", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{"H", ",", " ", 
        RowBox[{"q2", "[", "t", "]"}]}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"H", " ", "=", " ", 
    RowBox[{
     RowBox[{"pq", "'"}], " ", "-", " ", "L"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dq1", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"H", " ", "-", " ", "L"}], ")"}], " ", "/", " ", "p1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dq2", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"H", " ", "-", " ", "L"}], ")"}], " ", "/", " ", "p2"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Prints", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<X\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "X", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dX\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "dX", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "m", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<T\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "T", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<U\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "U", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<L\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "L", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dtdq1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "dtdq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dtdq2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "dtdq2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dq1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "dq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dq2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "dq2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<LangrageDiff1\>\"", "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"MatrixForm", "[", "LangrageDiff1", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<LangrageDiff2\>\"", "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"MatrixForm", "[", "LangrageDiff2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<H\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "H", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<p1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "p1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<p2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "p2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dp1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "dp1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dp2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "dp2", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dq1\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "dq1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<dq2\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "dq2", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Example", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m2", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m3", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", " ", "=", " ", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r1", "\[Equal]", "0"}], ",", 
        RowBox[{"r2", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"q1", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", "3"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"q2", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"Pi", "/", "2"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"q2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q1", "=", 
   RowBox[{"First", "[", 
    RowBox[{"q1", "/.", "sol"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"q2", "=", 
    RowBox[{"First", "[", 
     RowBox[{"q2", "/.", "sol"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"q1", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"q2", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.5", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           RowBox[{"-", "1.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1.5"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "l", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"q1", "[", "t", "]"}], "]"}]}], ")"}], " ", "+", " ", 
            RowBox[{"(", 
             RowBox[{"2", "*", "l", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"q2", "[", "t", "]"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", " ", "+", " ", 
            RowBox[{"(", 
             RowBox[{"2", "*", "l", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"q2", "[", "t", "]"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", "0"}], "}"}]}], "\[IndentingNewLine]", 
        "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.688886075844124*^9, 3.6888863010716953`*^9}, {
   3.6888863542849703`*^9, 3.688886377477192*^9}, {3.6888864505305223`*^9, 
   3.6888864911766443`*^9}, 3.688886563704318*^9, {3.688886602633079*^9, 
   3.6888867360586977`*^9}, {3.688886837487378*^9, 3.6888868947071333`*^9}, {
   3.688886997777652*^9, 3.688887005940611*^9}, {3.688887244130968*^9, 
   3.6888874587488117`*^9}, {3.688887524457676*^9, 3.688887659216077*^9}, {
   3.688887697934641*^9, 3.688887738324346*^9}, {3.688887787309813*^9, 
   3.688887791789892*^9}, {3.692114993332053*^9, 3.692115135904142*^9}, {
   3.692115172126747*^9, 3.692115210729168*^9}, {3.6921152631332607`*^9, 
   3.692115354681655*^9}, {3.6921154233258343`*^9, 3.6921155685909643`*^9}, {
   3.692115619687401*^9, 3.692115627601677*^9}, {3.692115802980977*^9, 
   3.69211585985555*^9}, {3.6921159070915537`*^9, 3.6921160313994827`*^9}, {
   3.6921160924479218`*^9, 3.6921161017209167`*^9}, {3.692116224683633*^9, 
   3.692116225712672*^9}, {3.6921162968356323`*^9, 3.692116371254066*^9}, {
   3.692116409154292*^9, 3.692116428155983*^9}, {3.6921165141513023`*^9, 
   3.692116541461155*^9}, {3.692116592965571*^9, 3.692116637924885*^9}, {
   3.692116930431809*^9, 3.692116937576042*^9}, {3.692117448587143*^9, 
   3.6921174963039007`*^9}, {3.692123460600264*^9, 3.6921234633554487`*^9}, {
   3.692123969676252*^9, 3.692124178202951*^9}, {3.6921242120707684`*^9, 
   3.692124268691077*^9}, {3.692124487709882*^9, 3.6921245173772993`*^9}, {
   3.692124753141327*^9, 3.692124772183206*^9}, {3.692125429841692*^9, 
   3.6921254318521643`*^9}, {3.692125848312048*^9, 3.692125932542252*^9}}],

Cell[BoxData["\<\"X\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886609621*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}]}]},
      {
       RowBox[{"l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}]}]},
      {
       RowBox[{"2", " ", "l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}]}]},
      {"0"},
      {
       RowBox[{
        RowBox[{"2", " ", "l", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", "l", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}]}]}]},
      {
       RowBox[{"2", " ", "l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"q2", "[", "t", "]"}], "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866110077`*^9}],

Cell[BoxData["\<\"dX\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886612919*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", "l"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{"l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", "l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {"0"},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", "l", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["q1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["q2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]},
      {
       RowBox[{"2", " ", "l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["q2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886614171*^9}],

Cell[BoxData["\<\"m\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.69212588661585*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"m1", "0", "0", "0", "0", "0"},
     {"0", "m1", "0", "0", "0", "0"},
     {"0", "0", "m2", "0", "0", "0"},
     {"0", "0", "0", "m2", "0", "0"},
     {"0", "0", "0", "0", "m3", "0"},
     {"0", "0", "0", "0", "0", "m3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886616847*^9}],

Cell[BoxData["\<\"T\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886618541*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m1", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"m2", "+", "m3"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", "m3", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}], "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866198273`*^9}],

Cell[BoxData["\<\"U\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886621744*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "l", " ", "m1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
   RowBox[{"2", " ", "g", " ", "l", " ", "m3", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q2", "[", "t", "]"}], "]"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866229153`*^9}],

Cell[BoxData["\<\"L\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886624794*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"g", " ", "l", " ", "m1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q1", "[", "t", "]"}], "]"}]}], "+", 
   RowBox[{"2", " ", "g", " ", "l", " ", "m3", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["l", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m1", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"m2", "+", "m3"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"8", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "m3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"q2", "[", "t", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"q2", "[", "t", "]"}], "]"}], "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886626094*^9}],

Cell[BoxData["\<\"dtdq1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886627742*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "m1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["q1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m1", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"m2", "+", "m3"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["q1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m1", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m1", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"m2", "+", "m3"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866293*^9}],

Cell[BoxData["\<\"dtdq2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886630921*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"q2", "[", "t", "]"}], "]"}], "2"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866321373`*^9}],

Cell[BoxData["\<\"dq1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886633767*^9}],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "g", " ", "l", " ", "m1", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"4", " ", "g", " ", "l", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["l", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"m2", "+", "m3"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"m2", "+", "m3"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"q1", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"8", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886634523*^9}],

Cell[BoxData["\<\"dq2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886636301*^9}],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "g", " ", "l", " ", "m1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"4", " ", "g", " ", "l", " ", "m3", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}]}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["l", "2"], " ", "m3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886637105*^9}],

Cell[BoxData["\<\"LangrageDiff1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886638856*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"l", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"2", " ", "l", " ", 
      RowBox[{"(", 
       RowBox[{"m2", "+", "m3"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        RowBox[{"q1", "[", "t", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"4", " ", "l", " ", "m3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"l", " ", "m1", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"l", " ", "m1", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", "l", " ", "m2", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", "l", " ", "m3", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", "l", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.69212588664013*^9}],

Cell[BoxData["\<\"LangrageDiff2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.6921258866421757`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"2", " ", "l", " ", "m3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"2", " ", "l", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", "l", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2", " ", "l", " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886643125*^9}],

Cell[BoxData["\<\"H\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886644795*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "g"}], " ", "l", " ", "m1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
   RowBox[{"2", " ", "g", " ", "l", " ", "m3", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"q2", "[", "t", "]"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["l", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m1", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m1", "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"m2", "+", "m3"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"q1", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"8", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "m3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"q2", "[", "t", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"q2", "[", "t", "]"}], "]"}], "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886645788*^9}],

Cell[BoxData["\<\"p1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886647668*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"m1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m2", "+", "m3"}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m2", "+", "m3"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"q1", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"8", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886648466*^9}],

Cell[BoxData["\<\"p2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886650092*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"4", " ", 
   SuperscriptBox["l", "2"], " ", "m3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["q2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886650793*^9}],

Cell[BoxData["\<\"dp1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886652409*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", "l"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "g"}], " ", "m1"}], "+", 
     RowBox[{"4", " ", "l", " ", 
      RowBox[{"(", 
       RowBox[{"m2", "+", "m3"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"4", " ", "l", " ", "m3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886653282*^9}],

Cell[BoxData["\<\"dp2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886655158*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", "2"}], " ", "l", " ", "m3", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "g"}], "+", 
     RowBox[{"2", " ", "l", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["q1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886656006*^9}],

Cell[BoxData["\<\"dq1\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.69212588665773*^9}],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "g", " ", "l", " ", "m1", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"4", " ", "g", " ", "l", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["l", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"m2", "+", "m3"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"m2", "+", "m3"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"q1", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"8", " ", "m3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886658555*^9}],

Cell[BoxData["\<\"dq2\"\>"], "Print",
 CellChangeTimes->{
  3.692115497823059*^9, 3.692115573007051*^9, 3.6921156301916027`*^9, {
   3.692115830012795*^9, 3.69211586251967*^9}, 3.692116008040831*^9, {
   3.6921160480003347`*^9, 3.692116049759632*^9}, 3.692116105047719*^9, 
   3.692116145653159*^9, 3.6921162296555843`*^9, {3.692116337771635*^9, 
   3.6921163737535563`*^9}, 3.69211643126863*^9, {3.692116519467032*^9, 
   3.6921165432882853`*^9}, 3.692116640237076*^9, 3.6921169479890738`*^9, 
   3.6921175697288103`*^9, 3.692123525608074*^9, {3.692124087330513*^9, 
   3.6921241325595493`*^9}, 3.692124180331184*^9, {3.692124219605238*^9, 
   3.69212427170997*^9}, 3.692124519769971*^9, {3.6921254120270042`*^9, 
   3.6921254339935904`*^9}, 3.692125886660281*^9}],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "g", " ", "l", " ", "m1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q1", "[", "t", "]"}], "]"}]}], "-", 
    RowBox[{"4", " ", "g", " ", "l", " ", "m3", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"q2", "[", "t", "]"}], "]"}]}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["l", "2"], " ", "m3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"q1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"q2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["q1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["q2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258866611233`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8le8btjfZe49jnINzjnOO7VzHqoSUhnYaSCVkliRpSWhJQovIV4hS
JKshFUlKZSRZGRlRyPi9v7/ez/15nud97ue613Vp7TiwejcPFxdXkQgX1/+/
2knztzPVa+yu5VVVcWvPsB8JGWrs97vOlkrkfDO9NsuuiSjIMvArZAvNe3+2
k59jv6QG+Qr4VbFVVa/EiSovsqPkFh8v3njGDn7wePi+JxdSLjjZzZ2rYwdy
K8iKaXLjVULzsinfd+wfB/coHHjPg7E4sf6IvPds2esd9OInvDjyrNDw740P
7PB7yZ/jSvmQgj8Fv8+1svvdNYa/jwlA5+jV8aC4L2zZpogd42ZCKHpqwxg7
1MbW5QowWHpEGDZz38ICgjrYp9Xe85zOE0G91fGyYd9v7K0hQ5Pcd0Txn41M
NLOwi51yr++X8AExjLftuh6S953NenW5ny4uDovDpdUl2d1s16atBcmnxRGt
LNQ9ceMH27fvD9frfnE8L9vAS0/vYU/KdovwUyUgsuE/3aArvey3ehcem+2W
gMf0nFPRhT72igPfu7bHS+DKFXff0XP97Ibite7DNyXQybpx2uTMALshRkuh
9J4EdD+N390f95MtE2Iib1soAf9Qhzf5RwfZDnp8ig9yJFAke3l46NAQ++OP
z36SqRL4U9InTg4bZvc+z8mQOSYBW08LU/+gEXZ6oe37VTslEDdxxuPuvl/s
XZ/CFJhsCbw+3xY04DvKXuHhkLQgK4HTqSn1F2ljbCfhPSYvesRB8WNvNCsc
Y8ebZssGF4jjnfnAYDNlnD2y+uznsiBxBAuePxycN84uHBKslDIRh1yrpZi0
wQRb+XON0PVuMTy+051+P3uCrX3YPkEtUQybws4ar9L5ze4iCxmUmYhhwYlR
OXbjN5t8pcf1Y40obsp1uCerT7IfN8xMPnMQhWPviW+m6ZPsQqWBkymFIhh4
YBL4TmmKrbT5Ysj3RWGcjWvlOnBlip0ZxLEZogvDZE3MeQm5P2zNTUnN91cL
oVnHULvgwh92vu7OFX3BglB8dshh5NxftkB5/J3pLn48uaDTkiA6zS76WD4n
QuPH1h1vd1HOTLM/+8yW7UziAzc9dOqNwAw7dMcKn6WzvMjiVj+5N26GncW3
6WRoIC+Wvn8pL8ozyz6uJ7VXbZwHgzcO5OQdnWU/mznj9PowDxIDFS1c5mfZ
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
kY8Nnfbr6+5RceXfkezLfD7Ywrasb/lUDB+IudUhIvEpBBZ4bqLCVpffo+LG
h3NUnPGIIxXJ1brKbE8+GhYwDH6rUVEvkGDG+fLhz7X6ZPuVAvmOtjVF/nxI
cWMvn7pP9FZceUbbGj6ssl8bKZyjIFtuX/W09XyoaWj3BWRS8DpvzWd6BB8Z
rm4bZyZRMN8SCmExfESc2yyUjiLzp0GdkhvHx5ZVyhcSAyk45/1r9ZMtfHhX
5gb99SB6pP/xHokkPh6utTeRF1FgseNshVkqH/0JX61DHYk+Vk/64L+Lj/qk
/VpvllFw44KHbNZeYvtN3q7HpEBymYXF/Qw+fsyPHdSnUMBulvcZyuJDtm+v
Xo0FBekhXTv1jvAhmf5i+yNTCp6M3ypbeYKPf4ZGVJoRBSoHj7zefZKPNYn6
JX/0KZj2SvlZ9Bk+Mm+rT9XTJXpQbX+91zk+NjmsCUwl+vv70eQrxpf4kBmr
UrpI9Nnnt2PnVSv4aF9T+CVWg+RjXtzJiSpyvj+NuR5ziF73GzjUfYMP/ePW
Vb5En9cVrN//7DYf+1fY3khTJef53JlafY8Ph6v3qK+JXr+s67flVAMfxyRZ
D3yUiX4Nfh219zEf64fcZ2kQvZh3fnnwhqd89PBEX7WIns/pbfL1fcnHQGAz
P16Rgr0mjis4rXywnCMLKMROjrzrtOQtwe/20tZwYm+6zFym3s5Hi1vyJXOy
PnzwKmXSZz5GbsjNP0H2D7Q2N/32hZy3QvHmQxKP56aSRS+/8WFfxt78luhT
UbWuxs0f5D7MjAr7O5fox7F8pbO/yPnW543wFlBgaztX9r8/fMzK7TSW0f//
3wPPnogb5cPRTD00bAnhN7Uzhvwm+HCNM7K/S6NASzq911FKgBSHQ/98ORSo
saU7zKcKcGLNU/1TboSf7EpsmysnwOxvWt/+BVMg/fDvE+kZAnAmVf76nEjB
iFxM3XclAXzLssNfHKagn//9RrOqAPZa38LdrlLQ9d/a8ltzBNChFSsbvaHg
3bOP54rmCfCt6NxF5clUvFT2zj+gLYBHObu714KKhyuac+J1BYhrpS6+4U/F
7UPCfQEGAgid/Isj9lFR2fYwxdlEAEfdpOW3y6komesQb2UuQH79jL2Xmqk4
5XMrcp61AEnt1IvWf6jI+Fju088U4NUqz7JDFjTsXGiyvG2pAE82LIh0FdKQ
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
80yvCnGv+NenPHkmNu1ZPDT/mhCrD3aaTsgSvjNYfVLxOulHl1Ntk///83Jf
Z77kTSGyzq3TVCP2w/p3fwdqhFjYMpB/itg0s4jTn24LMXTgWpfMNCbOH5UQ
vqgVwn0s8s8isv9c6czRu/eE4Ax8KW1TYGJv2MLCK3VCRDZwpksrMTHWfEV8
pkGIqKJ8xTQSbyjY49kPhTi8VNGCQ/ju23Mt53Y+FuKqbuFZQ4LnzYQRieCn
QtwvXzlPfhETQxe7+pOfC/EnxjLYejETSzqet594SfrrHwVdK2MmQlRvPa1q
JuvHkDa8hPBJx+LbL1qFiDD4cCeO4P0+4VBZ32shjE/s7j5rw4RaWUq+7Duy
Pu1sQxLBR9gRkaHzQYgp7J6nkgT/dFXvJLuPQpSdiZ3QJ3zrniM30rNDCMcT
Z5r/ELz/JVj6begk9/NPinv0Miasy7SEGV+EYKm0SeTZk3rrkEdxjxAtHr+f
7WSRfKkOm9Z9E2LRTXOhlQMTHY6d8z9+J/PQ0Hh/FbE1tj6bMfZDCPmxTIsF
hO+5ld2cUP0pxPPpuqnJxM7oOPfDbFAIxeZFgT+J/UA154PzkBDXkhvcd3OY
mMRLfrL2L+kHKefj/bmEL24Nv5U8IkROs/b6Y0QPbCzzvHhiTIjPFeo6y52Y
uNjBzqsaF2KDfvHNUj6pB1WL/15IiGC0Nkn2CdEL2rz52/omiXD/0II/bf//
3rVVLkJ2sgi7c8tPDHowkV32x1dnqghWXUvPLSP6oKmjQ2AnK4KTb/qVjrWk
/tSe2nrKicDUkanri2RiGe+GyYbpIjRsX9EWsoWJhK1F8zJmiOC4bSzPPo3U
d1mWQvFMEXrkJ7+gZzHxoyNp/L6yCJWe+z92nGRCXy2sr32WCPJ/tJeevEj0
Cs/j/aiaCJNpp1of32Di+FaHJtU5IrQY25W+biD8t8ysxkxDBPvNRYh+wYTi
Z81S53kiqLyeKAh/y4Sj2rTctVoi1B9hHHnawUQyb2hfsrYI74U/6Rd7mLix
9dPWEzoilOx5esWoj9RfWVNYla4ISS06IREDTJh+rvZ5oS+CdPIyh9xfTASr
FfL7DESI8XRsfD9I+gPvIFPWWATvpga75b9JfW/dZqxjKsLnC38N5xN71qX1
mnZmIgzH0118yPuCz+7TPS1EKFfqy1j86//f81j/Yq3I+ql28seJv1reku//
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
jwyLXnNI2Jo37A4SM0FeRHbOtC2JtjNFdsX9xgj2+qGrYEdiR8XoSNhHYyxZ
a5hh5kCiS8LrvUadMfhNd6muXU2iuYS3jPXEGC/lshO3r2X2DxPOqswxRszE
d7kwRxJ/1MPVbBKNQXwyOJ/gRCJ9xOtzX6QxFCt9xe45k9DV3FHH9TFGx+2s
kzUEiedLHursXmeMm9Hf+b/ySDwQrQs6YWSMXYEGR/7RJKbSZw8rihpjbHFW
kOlmEp7cptCJciOUqX0fXL2FxIqk2UetE41wTNDA19Od4Sv6QOBbRl+SdXfc
L28nMXLU4XgVywh6Hncc//qREJaVfREXZoiXydZ5P3eTsIgV/ljJzOsd/1VL
9e4hcWzauiTc1BAZTt8bG/aRUNqaSUsyfrQ9G2r5cj+Jq7UHfE8VGeDzC9GE
0oMkFmf4uL9l8kuNY+h6+zCJQEtJjQNmBngSUlKSHEbC2CD4Q88MA7gVrlW5
eJTEmrE12wxr9TE13BZ2KpJEwvLUJUvi9XHVyK/z8HGSyZHl/VG0Pqx3/rXZ
e5LEmG34rPvS+mjOiM7wPk0yfZut+cXMs/0d84XcokiI6XbbuW7Rw1zlXC9u
NIm1/DEhUyO6eEAte+UQS8JOmbvs/WVdEBdr9ZedJ3Endvm3Y+t08bPW7az5
RRL9C+zPlUvq4vzswX7dSyQqpvzEVdp1wLYLW69ymcTAQOqqnrs6qD0qkS9z
hUTSqV/Wfid14Fd6TXrWVUbvAum/4z10IDZuEvQvicTm1WkqN6CDLIvy979S
SDiUtH6XVNfB6gAnq2+pJMxu3XA4OFMHJ3sCJt5lMPi8P75q4RttaGvM2PTq
Jol3VvSAZYE2Kt3Ol5bdJhH5gBUckqQN/qb88MxsEid5X9mJAdpIk7L5nJJL
Yrevibb/Jm1gXYNtXB6Jwx8/bApapY2PpzxunL5HQlro6NtCK20crvwpFFZA
4ufeb862OtpQ5ov0Dipk9vuSvVB/njaKF8tU73zI8G/rHHVotjZc9l832FJM
osFP6MSqf1oYu2ceTZSQ4JcVZl39pYXLA88GVpWRmPcmLnZPnxYs9QknTjmJ
7a3Lyko/a6Fx+5d8iwoSg2eu33Bt08LetCAZ/UoS4jGLG8Q/aEG6XWCfahWJ
2ntJQYcatJA371KT7EsSC6+Ezbau1cJ6Qmvh7GoSF95bjb95pYWB2AdXpmtI
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

       "]]},
     Annotation[#, "Charting`Private`Tag$203240#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.6720322532610956, 29.958316790127682`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.6921258867377663`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mju6lQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$203278#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-0.8288759596582991, 3.8895381107884033`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886820141*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 85.3895378112793, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100}}, Typeset`size$$ = {360., {193., 199.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$203305$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$203305$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[{
         Line[{{-1.5, 0, 0}, {1.5, 0, 0}}], 
         Line[{{0, -1.5, 0}, {0, 1.5, 0}}], 
         Line[{{0, 0, -1.5}, {0, 0, 1.5}}], 
         Arrow[{{0, 0, 0}, {2 $CellContext`l Cos[
               $CellContext`q1[$CellContext`t$$]] + 2 $CellContext`l Cos[
               $CellContext`q2[$CellContext`t$$]], 0 + 2 $CellContext`l Sin[
               $CellContext`q2[$CellContext`t$$]], 0}}]}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {229., 236.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.688886470376774*^9, 3.6888864918687983`*^9}, 
   3.6888867376298428`*^9, {3.688886884620767*^9, 3.688886895365727*^9}, {
   3.6888870107219963`*^9, 3.688887011860732*^9}, {3.6888872677904787`*^9, 
   3.688887287783091*^9}, 3.688887460272439*^9, {3.688887526510523*^9, 
   3.6888875296650143`*^9}, {3.6888875736051292`*^9, 3.6888875900372047`*^9}, 
   3.688887781576523*^9, 3.692115497431983*^9, 3.692115572890133*^9, 
   3.692115630192995*^9, {3.692115830014275*^9, 3.6921158625206347`*^9}, 
   3.692116008042163*^9, {3.692116047975327*^9, 3.692116049760762*^9}, 
   3.6921161050490713`*^9, 3.692116145654413*^9, 3.692116229656599*^9, {
   3.692116337773148*^9, 3.6921163737546253`*^9}, 3.6921164312699547`*^9, {
   3.692116519468048*^9, 3.692116543289385*^9}, 3.692116640238277*^9, 
   3.6921169479902773`*^9, 3.692117569729897*^9, 3.692123525609468*^9, {
   3.6921240873315887`*^9, 3.692124132560993*^9}, 3.6921241803324947`*^9, {
   3.692124219606771*^9, 3.692124271711459*^9}, 3.6921245197712183`*^9, {
   3.6921254120281973`*^9, 3.692125433994624*^9}, 3.692125886859041*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68888778177952*^9, 3.688887784275289*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6888872686013403`*^9, 3.688887272386883*^9}}]
},
WindowSize->{952, 1017},
WindowMargins->{{1686, Automatic}, {4, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 71, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[653, 25, 16520, 430, 3163, "Input"],
Cell[17176, 457, 763, 11, 24, "Print"],
Cell[17942, 470, 2457, 57, 134, "Output"],
Cell[20402, 529, 764, 11, 24, "Print"],
Cell[21169, 542, 3294, 80, 134, "Output"],
Cell[24466, 624, 762, 11, 24, "Print"],
Cell[25231, 637, 1881, 36, 134, "Output"],
Cell[27115, 675, 763, 11, 24, "Print"],
Cell[27881, 688, 2833, 67, 89, "Output"],
Cell[30717, 757, 763, 11, 24, "Print"],
Cell[31483, 770, 1465, 26, 46, "Output"],
Cell[32951, 798, 763, 11, 24, "Print"],
Cell[33717, 811, 3141, 74, 89, "Output"],
Cell[36861, 887, 767, 11, 24, "Print"],
Cell[37631, 900, 4040, 98, 110, "Output"],
Cell[41674, 1000, 767, 11, 24, "Print"],
Cell[42444, 1013, 2799, 63, 89, "Output"],
Cell[45246, 1078, 765, 11, 24, "Print"],
Cell[46014, 1091, 2490, 56, 66, "Output"],
Cell[48507, 1149, 765, 11, 24, "Print"],
Cell[49275, 1162, 2008, 42, 66, "Output"],
Cell[51286, 1206, 775, 11, 24, "Print"],
Cell[52064, 1219, 3482, 80, 97, "Output"],
Cell[55549, 1301, 777, 11, 24, "Print"],
Cell[56329, 1314, 2194, 46, 50, "Output"],
Cell[58526, 1362, 763, 11, 24, "Print"],
Cell[59292, 1375, 3161, 75, 89, "Output"],
Cell[62456, 1452, 764, 11, 24, "Print"],
Cell[63223, 1465, 2120, 46, 62, "Output"],
Cell[65346, 1513, 764, 11, 24, "Print"],
Cell[66113, 1526, 1683, 33, 46, "Output"],
Cell[67799, 1561, 765, 11, 24, "Print"],
Cell[68567, 1574, 2067, 44, 50, "Output"],
Cell[70637, 1620, 765, 11, 24, "Print"],
Cell[71405, 1633, 1725, 34, 46, "Output"],
Cell[73133, 1669, 764, 11, 24, "Print"],
Cell[73900, 1682, 2490, 56, 66, "Output"],
Cell[76393, 1740, 765, 11, 24, "Print"],
Cell[77161, 1753, 2010, 42, 66, "Output"],
Cell[79174, 1797, 58434, 969, 233, "Output"],
Cell[137611, 2768, 62466, 1035, 234, "Output"],
Cell[200080, 3805, 3344, 59, 482, "Output"]
}, Open  ]],
Cell[203439, 3867, 91, 1, 32, "Input"],
Cell[203533, 3870, 94, 1, 32, "Input"]
}
]
*)

